#!/bin/bash

if [ "$(uname)" == "Darwin" ]; then
  mount_root=/Volumes
else
  mount_root=$HOME/mnt
fi

function ensure_thost {
  if [ -z "$thost" ]
  then
    echo "Error: no tunnel" >&2
    exit
  fi
}

function get_thost {
  thost="$1"
  if [ -n "$thost" ]
  then
    return 0
  fi
  if [ -n "$thost" ]
  then
    shift
  else
    thost=`(cd ~/.ssh && ls tunnel.* 2>/dev/null) | head -1 | cut -c8-`
    guess=1
  fi
  ensure_thost
  if [ -n "$guess" ]
  then
    echo "Tunnel not specified, assuming $thost."
  fi
}

function get_tconn_port {
  if [ -n "$port" ]
  then
    return 0
  fi
  port=`(cd ~/.ssh && ls tconn.$thost.$host.* 2>/dev/null) | head -1 | sed "s/tconn\\.$thost\\.$host\\.//"`
}

function allocate_port {
  port=`netstat -atn | perl -ane 'if ( $F[3] =~ /(\d+)$/ ) { $x{$1}=1 } END{ print( (grep {!$x{$_}} 32768..61000)[0] . "\n" )}'`
  echo "Using port $port"
}

function make_tunnel {
  ssh -fNM -S ~/.ssh/tunnel.$thost -oCheckHostIP=no -oStrictHostKeyChecking=no -oNumberOfPasswordPrompts=1 $thost
}

if [ -z "$1" ]
then
  cd ~/.ssh
  ls tunnel* 2>/dev/null
  ls tconn.* 2>/dev/null
  ls conn.* 2>/dev/null
  exit
fi

while [ -n "$1" ]
do
  case $1 in
    on )
      thost=$2
      shift
      ensure_thost
      make_tunnel
      ;;
    off )
      get_thost $2
      for socket in `(cd ~/.ssh && ls tconn.$thost.* 2>/dev/null)`
      do
        IFS="." read -a thost_host <<< "$socket"
        host=${thost_host[2]}
        if [ -d "$mount_root/$host" ]
        then
          umount "$mount_root/$host"
        fi
        ssh -O exit -S ~/.ssh/$socket $thost
      done
      ssh -O exit -S ~/.ssh/tunnel.$thost $thost
      ;;
    to )
      if [[ "$2" == /* ]]
      then
        dir="$2"
        shift
      else
        dir=
      fi
      host=$2
      shift
      get_thost $2
      if [ -z `ls ~/.ssh/tunnel.$thost 2>/dev/null` ]
      then
        make_tunnel
      fi
      get_tconn_port
      if [ -z "$port" ]
      then
        allocate_port
        ssh -O forward -fNM -S ~/.ssh/tconn.$thost.$host.$port -L $port:$host:22 $thost
        mkdir -p $mount_root/$host
        sshfs localhost:$dir -p $port -ovolname=$host -ofollow_symlinks /Volumes/$host
        ssh -fNM -S ~/.ssh/conn.$host.$port -p $port localhost
      fi
      ssh -S ~/.ssh/conn.$host.$port -p $port localhost
      ;;
    close )
      host=$2
      if [ -z $host ]
      then
        socket=`(cd ~/.ssh && ls tconn.* 2>/dev/null) | head -1`
      else
        socket=`(cd ~/.ssh && ls tconn.$host.* 2>/dev/null) | head -1`
        shift
      fi
      if [ -z "$socket" ]
      then
        echo "No tunnel."
        exit
      fi
      IFS="." read -a thost_host <<< "$socket"
      thost=${thost_host[1]}
      host=${thost_host[2]}
      port=${thost_host[3]}
      echo "Using host $host via $thost"
      umount $mount_root/$host
      ssh -O exit -S ~/.ssh/conn.$host.$port -p $port localhost
      ssh -O exit -S ~/.ssh/tconn.$thost.$host.$port $thost
  esac
  shift
done
